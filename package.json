{
  "name": "react-template",
  "scripts": {
    "dev": "npm run client:dev",
    "build": "npm run server:build && npm run client:build",
    "build:win": "npm run server:build:win && npm run client:build:win",
    "client:dev": "cd client && npm run dev",
    "client:build": "cd client && npm run build",
    "server:dev": "cd server && npm run dev",
    "server:build": "cd server && npm run build",
    "server:build:win": "cd server && npm run build:win",
    "pm2:start": "cd server && npm run pm2:start",
    "pm2:restart": "cd server && npm run pm2:restart",
    "pm2:reload": "cd server && npm run pm2:reload",
    "pm2:stop": "cd server && npm run pm2:stop",
    "pm2:delete": "cd server && npm run pm2:delete",
    "install:prod": "cd server && npm run install:prod",
    "reset-gitignore": "git rm -r --cached . && git add .",
    "reinstall-module": "rm -rf node_modules && rm -f package-lock.json && npm i && cd client && npm run reinstall-module && cd .. && cd server && npm run reinstall-module",
    "make:dev": "git checkout main && git branch dev && git checkout dev && git push --set-upstream origin dev",
    "make:staging": "git checkout main && git branch staging && git checkout staging && git push --set-upstream origin staging",
    "make:publish:development": "git branch publish/development && git checkout publish/development && sed -i '' 's/#PUB#//g' .gitignore && npm run reset-gitignore && git add . && git commit -m 'publish/development' && git push origin publish/development",
    "make:publish:staging": "git branch publish/staging && git checkout publish/staging && sed -i '' 's/#PUB#//g' .gitignore && npm run reset-gitignore && git add . && git commit -m 'publish/staging' && git push origin publish/staging",
    "make:publish:production": "git branch publish/production && git checkout publish/production && sed -i '' 's/#PUB#//g' .gitignore && npm run reset-gitignore && git add . && git commit -m 'publish/production' && git push origin publish/production",
    "publish:development": "cross-env NODE_ENV=development node .publish.js",
    "publish:staging": "cross-env NODE_ENV=staging node .publish.js",
    "publish:production": "cross-env NODE_ENV=production node .publish.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/parkdigy/react-template.git"
  },
  "eslintConfig": {},
  "devDependencies": {
    "cross-env": "^7.0.3",
    "eslint": "8.57.0",
    "prettier": "^3.2.5"
  }
}
